.spacer {
  flex: 1 1 auto;
}

.toolbar {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 73px;
  display: flex;
  z-index: 1;
  align-items: center;
  background-color: rgb(177, 100, 72);
  color: rgb(255, 255, 255);
  font-weight: 600;
}

.toolbar img {
  margin: 0 16px;
}

.example-label {
  display: table-cell;
  font-size: 14px;
  margin-left: 8px;
  min-width: 120px;
}

.example-button-row {
  display: table-cell;
  max-width: 600px;
}

.example-flex-container {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.button-toolbar {
  display: flex;
  justify-content: space-between;
  background-color: transparent !important;
  appearance: inherit;
  border: inherit;
  color: white !important;
}

.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-toolbar {
  background-color: rgb(177, 100, 72);
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

.example-icon {
  color: white;
}


.navbar-nav-right {
  margin-right: auto;
}

.navbar .navbar-menu-wrapper .navbar-nav {
  flex-direction: row;
  align-items: center;
}

h1.example-app-name {
  margin-left: 8px;
  color: white;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}
